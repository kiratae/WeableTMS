@using cntr = Weable.TMS.BO.Web.Controllers.TrainingController
@using targetGroupCntr = Weable.TMS.BO.Web.Controllers.TargetGroupController
@model Weable.TMS.BO.Web.Models.EditTrainingModel
@inject Weable.TMS.Model.ServiceModel.IFileService fileService
@inject Weable.TMS.Model.ServiceModel.ITargetGroupService targetGroupService

@{
    ViewData["Title"] = "การฝึกอบรม";

    string ImageUrl;
    if (Model.TrnImage.HasValue)
    {
        ImageUrl = fileService.GetData(Model.TrnImage.Value).Result.FileName;
    }
    else
    {
        ImageUrl = "/images/1200x675.jpg";
    }

}

@section Styles {
    <style>
        .btn-file, .btn-import {
            position: relative;
            overflow: hidden;
        }

            .btn-file input[type=file], .btn-import input[type=file] {
                position: absolute;
                top: 0;
                right: 0;
                min-width: 100%;
                min-height: 100%;
                font-size: 100px;
                text-align: right;
                filter: alpha(opacity=0);
                opacity: 0;
                outline: none;
                background: white;
                cursor: inherit;
                display: block;
            }

        #file-detail input {
            cursor: pointer;
        }

            #file-detail input:hover {
                color: #0F7E9B;
                text-decoration: underline;
            }

        #img-upload {
            width: 100%;
        }
    </style>
}

<nav aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item">การจัดการการฝึกอบรม</li>
        <li class="breadcrumb-item active">การฝึกอบรมใหม่</li>
    </ol>
</nav>

<div class="card shadow h-100 pt-3">
    <div class="card-body">
        <div class="row">
            <div class="col-md-12">
                <form id="edit-form" asp-action="@cntr.ActionEdit">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <input type="hidden" asp-for="TrainingId" />

                    <!-- ข้อมูลโครงการ -->
                    <h4 class="title">ข้อมูลการฝึกอบรม</h4>

                    <div class="form-group row">
                        <label asp-for="CourseId" class="col-sm-3 col-form-label text-left text-md-right">หลักสูตร<span class="text-danger"> *</span></label>
                        <div class="col-sm-7">
                            @Html.DropDownListFor(x => x.CourseId, Model.Courses, "- เลือกหลักสูตร -", new { @class = "form-control" })
                        </div>
                        <span asp-validation-for="CourseId" class="text-danger"></span>
                    </div>
                    <div class="form-group row">
                        <label asp-for="Name" class="col-sm-3 col-form-label text-left text-md-right">ชื่อการฝึกอบรม<span class="text-danger"> *</span></label>
                        <div class="col-sm-7">
                            <input asp-for="Name" class="form-control" />
                        </div>
                        <span asp-validation-for="Name" class="text-danger"></span>
                    </div>

                    <hr />
                    <!-- รายละเอียดการฝึกอบรม -->
                    <h4 class="title">รายละเอียดการฝึกอบรม</h4>

                    <div class="form-group">
                        <label class="col-md-9 form-control-static">
                            รูปภาพการฝึกอบรม :
                            <span class="text-danger"> *</span>
                            <span style="font-size:12px; color:gray; font-style:italic">(ภาพต้องมีอัตราส่วนภาพ 16:9 และมีขนาดไม่เกิน 20 Mb.) </span>
                        </label>
                    </div>
                    <div class="form-group row">
                        @Html.HiddenFor(x => x.TrnImage)
                        <div class="border border-gray mx-3 p-3" style="border-radius: .35rem;">
                            <span class="btn btn-primary btn-file mb-2">
                                <i class="fa fa-image"></i> เลือกรูปภาพ<input type="file" id="imgInp">
                            </span>
                            @*<div id="progress-wrp">
                    <div class="progress-bar"></div>
                    <div class="status">0%</div>
                </div>*@
                            <div class="input-group col-sm-6 ml-0 pl-0 mb-2" id="file-detail">
                                <span class="input-group-prepend">
                                    <span class="input-group-text">
                                        <i class="fa fa-paperclip"></i>
                                    </span>
                                </span>
                                <input type="text" class="form-control" readonly>
                                <span class="input-group-append">
                                    <button type="button" class="btn btn-outline-danger btn-file-delete">
                                        <i class="fa fa-times"></i>
                                    </button>
                                </span>
                            </div>
                            <img id="img-upload" src="@ImageUrl" />
                        </div>
                    </div>

                    <div class="form-group">
                        <label asp-for="Description" class="control-label">รายละเอียด</label>
                        <textarea asp-for="Description" class="form-control" rows="4"></textarea>
                        <span asp-validation-for="Description" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="Objective" class="control-label">วัตถุประสงค์</label>
                        <textarea asp-for="Objective" class="form-control" rows="4"></textarea>
                        <span asp-validation-for="Objective" class="text-danger"></span>
                    </div>

                    <div class="form-group">
                        <label asp-for="Condition" class="control-label">เงื่อนไขการฝึกอบรม</label>
                        <textarea asp-for="Condition" class="form-control" rows="4"></textarea>
                        <span asp-validation-for="Condition" class="text-danger"></span>
                    </div>

                    <hr />
                    <!-- กลุ่มเป้าหมาย -->
                    <h4 class="title my-3">กลุ่มเป้าหมาย</h4>

                    <div class="form-group">
                        <label asp-for="TargetGroupNote" class="control-label">รายละเอียดกลุ่มเป้าหมาย</label>
                        <textarea asp-for="TargetGroupNote" class="form-control" rows="4"></textarea>
                        <span asp-validation-for="TargetGroupNote" class="text-danger"></span>
                    </div>

                    @Html.HiddenFor(x => x.TargetGroupId)

                    <button class="btn btn-primary" type="button" data-toggle="modal" data-target="#importTargetGroupModel">
                        <i class="fa fa-file-import"></i> นำเข้ารายชื่อกลุ่มเป้าหมาย
                    </button>

                    @if (Model.TargetGroupId.HasValue)
                    {
                        var targetGroup = await targetGroupService.GetData(Model.TargetGroupId);
                        var deleteTargetGroupUrl = Url.Action(targetGroupCntr.ActionDelete, targetGroupCntr.Name, new { id = targetGroup.TargetGroupId });
                        <div id="targetGroup" class="form-group mt-3">
                            <label>ชื่อกลุ่มเป้าหมาย : @targetGroup.Name <button type="button" data-x-url="@deleteTargetGroupUrl" class="btn btn-danger btn-targetGroup-remove">ลบ</button></label>
                            <div class="table-responsive no-gutters">
                                <table class="table table-borderless table-border-bottom">
                                    <thead class="thead-style">
                                        <tr>
                                            <th class="text-center">ลำดับ</th>
                                            <th class="text-center">เลขบัตรประจำตัวประชาชน</th>
                                            <th class="text-left">ชื่อ - นามสกุล</th>
                                            <th class="text-center"></th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @{ int index = 1; }
                                        @foreach (var TGM in targetGroup.TargetGroupMember)
                                        {
                                            <tr>
                                                <td>@(index++)</td>
                                                <td>@TGM.CitizenId</td>
                                                <td>@TGM.Prefix@TGM.FirstName @TGM.LastName</td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    }

                    <hr />
                    <!-- รายชื่อผู้เกี่ยวข้อง -->
                    <h4 class="title my-3">รายชื่อผู้เกี่ยวข้อง</h4>

                    <hr />
                    <!-- การรับสมัคร -->
                    <h4 class="title my-3">การรับสมัคร</h4>

                    @await Html.PartialAsync("~/Views/Training/Edit/_TrnDate.cshtml", Model)

                    <hr />
                    <!-- เงื่อนไข -->
                    <h4 class="title">เงื่อนไข</h4>

                    <div class="form-group row">
                        <label class="col-sm-12 col-form-label">การฝึกอบรมที่เคยเข้าร่วม<span class="text-danger"> *</span></label>
                        <div class="custom-control custom-checkbox col-sm-2 ml-3">
                            @Html.RadioButtonFor(x => x.IsPrerequisite, false, new { @id = "isP1", @class = "custom-control-input" })
                            <label class="custom-control-label" for="isP1"> ไม่จำเป็น</label>
                        </div>
                        <div class="custom-control custom-checkbox col-sm-2 ml-3">
                            @Html.RadioButtonFor(x => x.IsPrerequisite, true, new { @id = "isP2", @class = "custom-control-input" })
                            <label class="custom-control-label" for="isP2"> จำเป็น</label>
                        </div>
                    </div>

                    <hr />
                    <!-- การเผยแพร่การฝึกอบรม -->
                    <h4 class="title">การเผยแพร่การฝึกอบรม</h4>

                    @await Html.PartialAsync("~/Views/Training/Edit/_TrnPublishDate.cshtml", Model)

                    <hr />

                    <div class="form-group text-center pt-3">
                        <a asp-action="@cntr.ActionList" class="btn btn-secondary">ยกเลิก</a>
                        <input type="submit" value="บันทึก" class="btn btn-success" />
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="importTargetGroupModel" tabindex="-1" role="dialog">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-body">

                <div class="row">
                    <div class="col-10">
                        <h4 class="title mb-5">นำเข้ารายชื่อกลุ่มเป้าหมาย</h4>
                    </div>
                    <div class="col-2 ">
                        <button class="btn btn-default float-right" type="button" data-dismiss="modal">
                            <i class="fa fa-times"></i>
                        </button>
                    </div>
                </div>

                <div class="row justify-content-md-center">
                    <div class="col-md-12 text-center mb-3">

                        <button class="btn btn-primary disabled" type="button">
                            <i class="fa fa-file-download"></i> ดาวน์โหลดเทมเพลต
                        </button>

                        <span class="btn btn-primary btn-import">
                            <i class="fa fa-file-import"></i> นำเข้ารายชื่อกลุ่มเป้าหมาย<input type="file" id="importTargetGroup">
                        </span>

                    </div>
                    <div class="col-md-12 text-center">
                        <button class="btn btn-secondary" type="button" data-dismiss="modal">ปิด</button>
                    </div>
                </div>

            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="importResult" tabindex="-1" role="dialog">
    <div class="modal-dialog modal-lg modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-body">

                <div class="row">
                    <div class="col-10">
                        <h4 class="title mb-5">กรุณาตรวจสอบรายชื่อกลุ่มเป้าหมาย</h4>
                    </div>
                    <div class="col-2 ">
                        <button class="btn btn-default float-right" type="button" data-dismiss="modal">
                            <i class="fa fa-times"></i>
                        </button>
                    </div>
                </div>

                <div class="table-responsive">
                    <table class="table table-bordered" id="dataTable" width="100%" cellspacing="0">
                    </table>
                </div>

                <div class="col-md-12 text-center mt-3">
                    <button class="btn btn-success btn-save-import" type="button">บันทึก</button>
                </div>

            </div>
        </div>
    </div>
</div>

@section Scripts{
    <script>
        var __return_url = '@Url.Action(cntr.ActionList, cntr.Name)';
        $(document).ready(function () {
            $("#edit-form").submit(function (e) {
                e.preventDefault();
                weSaveForm($(this), function () {
                    window.location.href = __return_url;
                });
            });
        });
    </script>

    @* upload file *@
    <script>
        $(document).ready(function () {
            $('#file-detail').hide();

            var Upload = function (file) {
                this.file = file;
            };
            Upload.prototype.getType = function () {
                return this.file.type;
            };
            Upload.prototype.getSize = function () {
                return this.file.size;
            };
            Upload.prototype.getName = function () {
                return this.file.name;
            };

            Upload.prototype.doUpload = function () {
                var that = this;
                var formData = new FormData();

                // add assoc key values, this will be posts values
                console.log(this.file);
                formData.append("files", this.file);

                $.ajax({
                    type: "POST",
                    url: "@Url.Action("Index", "UploadFiles")",
                    xhr: function () {
                        var myXhr = $.ajaxSettings.xhr();
                        if (myXhr.upload) {
                            myXhr.upload.addEventListener('progress', that.progressHandling, false);
                        }
                        return myXhr;
                    },
                    success: function (data) {
                        // your callback here
                        alert("Files Uploaded!");
                        $('#TrnImage').val(data[0].fileId)
                        console.log(data);
                    },
                    error: function (error) {
                        // handle error
                        alert("Error!\n"+error);
                    },
                    enctype: 'multipart/form-data',
                    async: true,
                    data: formData,
                    cache: false,
                    contentType: false,
                    processData: false,
                    timeout: 60000
                });

            };

            Upload.prototype.progressHandling = function (event) {
                var percent = 0;
                var position = event.loaded || event.position;
                var total = event.total;
                var progress_bar_id = "#progress-wrp";
                if (event.lengthComputable) {
                    percent = Math.ceil(position / total * 100);
                }
                // update progressbars classes so it fits your code
                $(progress_bar_id + " .progress-bar").css("width", +percent + "%");
                $(progress_bar_id + " .status").text(percent + "%");
            };


            $(document).on('change', '.btn-file :file', function () {
                var file = $(this)[0].files[0];
                var upload = new Upload(file);
                // maby check size or type here with upload.getSize() and upload.getType()

                // execute upload
                upload.doUpload();
            });

            //$('.btn-file :file').on('fileselect', function (event, label) {

            //    $(this).parent().hide();
            //    $('#file-detail').show();
            //    var input = $('#file-detail').find(':text'),
            //        log = label;

            //    if (input.length) {
            //        input.val(log);
            //    } else {
            //        if (log) alert(log);
            //    }

            //});
            function readURL(input) {
                if (input.files && input.files[0]) {
                    // upload file
                    $.ajax({

                    });
                    console.log(input.files[0]);
                    var reader = new FileReader();

                    reader.onload = function (e) {
                        $('#img-upload').attr('src', e.target.result);
                    }

                    reader.readAsDataURL(input.files[0]);
                }
            }

            $("#imgInp").change(function () {
                readURL(this);
            });

            //$('#file-detail').find(':text').click(function () {
            //    // Download file
            //    alert($(this).val());
            //});

            $('.btn-file-delete').click(function () {

                const swalWithBootstrapButtons = Swal.mixin({
                    customClass: {
                        confirmButton: 'btn btn-success mx-1',
                        cancelButton: 'btn btn-danger mx-1'
                    },
                    buttonsStyling: false
                });

                swalWithBootstrapButtons.fire({
                    title: 'Are you sure?',
                    text: "You won't be able to revert this!",
                    type: 'warning',
                    showCancelButton: true,
                    confirmButtonText: 'Yes, delete it!',
                    cancelButtonText: 'No, cancel!',
                    reverseButtons: true
                }).then((result) => {
                    if (result.value) {
                        swalWithBootstrapButtons.fire(
                            'Deleted!',
                            'Your file has been deleted.',
                            'success'
                        );
                        $('#file-detail').hide();
                        $('.btn-file :file').parent().show();

                        $("#imgInp").val('');
                        $('#img-upload').attr('src', 'https://via.placeholder.com/1200x650.jpg');

                    } else if (
                        /* Read more about handling dismissals below */
                        result.dismiss === Swal.DismissReason.cancel
                    ) {
                        swalWithBootstrapButtons.fire(
                            'Cancelled',
                            'Your imaginary file is safe :)',
                            'error'
                        )
                    }
                });

            });
        });
    </script>

    @*import*@
    <script>
        $(document).ready(function () {

            var targetGroupMembers = [];

            $('.btn-save-import').click(function () {
                $.ajax({
                    method: 'post',
                    contentType: 'application/json; charset=utf-8',
                    url: '@Url.Action("Edit", "TargetGroup")',
                    headers: {
                        RequestVerificationToken:
                            $('input:hidden[name="__RequestVerificationToken"]').val()
                    },
                    dataType: "json",
                    data: JSON.stringify(targetGroupMembers),
                    success: function (data) {
                        console.log(data);
                        $('#TargetGroupId').val(data);
                        $('#importResult').modal('hide');
                        $('#importTargetGroupModel').modal('hide');
                    }
                });
            });

            $('.btn-targetGroup-remove').click(function () {
                $('#TargetGroupId').val('');
                var url = $(this).data('x-url');
                console.log(url);
                weDeleteSingleRow(url);
            });

            $(document).on('change', '.btn-import :file', function () {
                var file = $(this)[0].files[0];
                // maby check size or type here with upload.getSize() and upload.getType()
                var dataSet = [];

                targetGroupMembers = [];

                // execute upload
                Papa.parse(file, {
                    worker: true,
                    encoding: "UTF-8",
                    step: function (row) {
                        console.log("Row:", row.data);
                        dataSet.push(row.data);
                        targetGroupMembers.push({
                            "Identification": row.data[0],
                            "VerifyCode": row.data[1],
                            "CitizenId": row.data[2],
                            "Prefix": row.data[3],
                            "FirstName": row.data[4],
                            "LastName": row.data[5],
                            "Data1": row.data[6],
                            "Data2": row.data[7]
                        });
                    },
                    complete: function () {
                        console.log("All done!");

                        targetGroupMembers.splice(0, 1);
                        targetGroupMembers.pop();

                        console.log(targetGroupMembers);

                        dataSet.splice(0, 1);
                        dataSet.pop();

                        $('#dataTable').DataTable({
                            data: dataSet,
                            columns: [
                                { title: "Identification" },
                                { title: "Verify code" },
                                { title: "Citizen" },
                                { title: "Prefix" },
                                { title: "First name" },
                                { title: "Last name" },
                                { title: "Data 1" },
                                { title: "Data 2" }
                            ]
                        });

                        $('#importResult').modal('show');

                    }
                });

            });

        });

    </script>

    @* regis date *@
    <script>
        $(document).ready(function () {
            $("input[name='RegisterStartDate']").change(function () {

                setTimeout(function () {
                    var regisStartDate = $('#RegisterStartDate').val();
                    var regisEndDate = $('#RegisterEndDate').val();
                    var publishAtdDate = $('#PublishAtdDate').val();
                    var trnStartDate = $('#TrnStartDate').val();
                    var trnEndDate = $('#TrnEndDate').val();
                    var momentRegisStart = moment(regisStartDate, "DD/MM/YYYY");
                    var momentRegisEnd = moment(regisEndDate, "DD/MM/YYYY");
                    var momentpublishAtd = moment(publishAtdDate, "DD/MM/YYYY");
                    var momentTrnStart = moment(trnStartDate, "DD/MM/YYYY");
                    var momentTrnEnd = moment(trnEndDate, "DD/MM/YYYY");
                    if (momentRegisEnd.isBefore(momentRegisStart))
                        $('#RegisterEndDate').val(regisStartDate);
                    if (momentpublishAtd.isBefore(momentRegisStart))
                        $('#PublishAtdDate').val(regisStartDate);
                    if (momentTrnStart.isBefore(momentRegisStart))
                        $('#TrnStartDate').val(regisStartDate);
                    if (momentTrnEnd.isBefore(momentRegisStart))
                        $('#TrnEndDate').val(regisStartDate);
                });
            });


            $("input[name='RegisterEndDate']").change(function () {

                setTimeout(function () {
                    var regisStartDate = $('#RegisterStartDate').val();
                    var regisEndDate = $('#RegisterEndDate').val();
                    var publishAtdDate = $('#PublishAtdDate').val();
                    var trnStartDate = $('#TrnStartDate').val();
                    var trnEndDate = $('#TrnEndDate').val();
                    var momentRegisStart = moment(regisStartDate, "DD/MM/YYYY");
                    var momentRegisEnd = moment(regisEndDate, "DD/MM/YYYY");
                    var momentpublishAtd = moment(publishAtdDate, "DD/MM/YYYY");
                    var momentTrnStart = moment(trnStartDate, "DD/MM/YYYY");
                    var momentTrnEnd = moment(trnEndDate, "DD/MM/YYYY");
                    if (momentRegisEnd.isBefore(momentRegisStart))
                        $('#RegisterEndDate').val(regisStartDate)
                    if (momentpublishAtd.isBefore(momentRegisEnd))
                        $('#PublishAtdDate').val(regisEndDate);
                    if (momentTrnStart.isBefore(momentRegisEnd))
                        $('#TrnStartDate').val(regisEndDate);
                    if (momentTrnEnd.isBefore(momentRegisEnd))
                        $('#TrnEndDate').val(regisEndDate);
                }, 500)

            });
            $("input[name='PublishAtdDate']").change(function () {
                setTimeout(function () {
                    var regisStartDate = $('#RegisterStartDate').val();
                    var regisEndDate = $('#RegisterEndDate').val();
                    var publishAtdDate = $('#PublishAtdDate').val();
                    var trnStartDate = $('#TrnStartDate').val();
                    var trnEndDate = $('#TrnEndDate').val();
                    var momentRegisStart = moment(regisStartDate, "DD/MM/YYYY");
                    var momentRegisEnd = moment(regisEndDate, "DD/MM/YYYY");
                    var momentpublishAtd = moment(publishAtdDate, "DD/MM/YYYY");
                    var momentTrnStart = moment(trnStartDate, "DD/MM/YYYY");
                    var momentTrnEnd = moment(trnEndDate, "DD/MM/YYYY");
                    console.log(regisStartDate + " : " + publishAtdDate);
                    console.log(momentpublishAtd.isBefore(momentRegisStart));
                    if (momentpublishAtd.isBefore(momentRegisEnd))
                        $('#PublishAtdDate').val(regisEndDate);
                    if (momentTrnStart.isBefore(momentpublishAtd))
                        $('#TrnStartDate').val(publishAtdDate);
                    if (momentTrnEnd.isBefore(momentpublishAtd))
                        $('#TrnEndDate').val(publishAtdDate);
                }, 500)
            });
            $("input[name='TrnStartDate']").change(function () {

                setTimeout(function () {
                    var publishAtdDate = $('#PublishAtdDate').val();
                    var trnStartDate = $('#TrnStartDate').val();
                    var trnEndDate = $('#TrnEndDate').val();
                    var momentpublishAtd = moment(publishAtdDate, "DD/MM/YYYY");
                    var momentTrnStart = moment(trnStartDate, "DD/MM/YYYY");
                    var momentTrnEnd = moment(trnEndDate, "DD/MM/YYYY");
                    if (momentTrnStart.isBefore(momentpublishAtd))
                        $('#TrnStartDate').val(publishAtdDate);
                    if (momentTrnEnd.isBefore(momentTrnStart))
                        $('#TrnEndDate').val(trnStartDate);
                }, 500)
            });
            $("input[name='TrnEndDate']").change(function () {
                setTimeout(function () {
                    var trnStartDate = $('#TrnStartDate').val();
                    var trnEndDate = $('#TrnEndDate').val();
                    var momentTrnStart = moment(trnStartDate, "DD/MM/YYYY");
                    var momentTrnEnd = moment(trnEndDate, "DD/MM/YYYY");
                    if (momentTrnEnd.isBefore(momentTrnStart))
                        $('#TrnEndDate').val(trnStartDate);
                }, 500)
            });
            $("input[name='PublishDate']").on('change', function () {
                setTimeout(function () {
                    var publishDate = $('#PublishDate').val();
                    var regisStartDate = $('#RegisterStartDate').val();
                    var momentPublish = moment(publishDate, "DD/MM/YYYY");
                    var momentRegisStart = moment(regisStartDate, "DD/MM/YYYY");
                    if (momentRegisStart.isBefore(momentPublish))
                        $('#PublishDate').val(regisStartDate);
                }, 500)
            });
        });
    </script>

    @* public now *@
    <script>
        $(document).ready(function () {
            $("input[name='IsPublishNow']").change(function () {
                var check = $(this).val().toString();
                if (check == "False") {
                    $('#publishDate').show();
                }
                else {
                    $('#publishDate').hide();
                }
            });
        });
    </script>
}
